--- a/qsdk/qca/src/linux-4.4/net/openvswitch/conntrack.c
+++ b/qsdk/qca/src/linux-4.4/net/openvswitch/conntrack.c
@@ -35,43 +35,6 @@
 #include "flow.h"
 #include "flow_netlink.h"
 
-struct ovs_ct_len_tbl {
-	int maxlen;
-	int minlen;
-};
-
-/* Metadata mark for masked write to conntrack mark */
-struct md_mark {
-	u32 value;
-	u32 mask;
-};
-
-/* Metadata label for masked write to conntrack label. */
-struct md_labels {
-	struct ovs_key_ct_labels value;
-	struct ovs_key_ct_labels mask;
-};
-
-enum ovs_ct_nat {
-	OVS_CT_NAT = 1 << 0,     /* NAT for committed connections only. */
-	OVS_CT_SRC_NAT = 1 << 1, /* Source NAT for NEW connections. */
-	OVS_CT_DST_NAT = 1 << 2, /* Destination NAT for NEW connections. */
-};
-
-/* Conntrack action context for execution. */
-struct ovs_conntrack_info {
-	struct nf_conntrack_helper *helper;
-	struct nf_conntrack_zone zone;
-	struct nf_conn *ct;
-	u8 commit : 1;
-	u8 nat : 3;                 /* enum ovs_ct_nat */
-	u16 family;
-	struct md_mark mark;
-	struct md_labels labels;
-#ifdef CONFIG_NF_NAT_NEEDED
-	struct nf_nat_range range;  /* Only present for SRC NAT and DST NAT. */
-#endif
-};
 
 static void __ovs_ct_free_action(struct ovs_conntrack_info *ct_info);
 
--- a/qsdk/qca/src/linux-4.4/net/openvswitch/conntrack.h
+++ b/qsdk/qca/src/linux-4.4/net/openvswitch/conntrack.h
@@ -14,8 +14,52 @@
 #ifndef OVS_CONNTRACK_H
 #define OVS_CONNTRACK_H 1
 
+#ifdef CONFIG_NF_NAT_NEEDED
+#include <linux/netfilter/nf_nat.h>
+#include <net/netfilter/nf_nat_core.h>
+#include <net/netfilter/nf_nat_l3proto.h>
+#endif
+
 #include "flow.h"
 
+struct ovs_ct_len_tbl {
+	int maxlen;
+	int minlen;
+};
+
+/* Metadata mark for masked write to conntrack mark */
+struct md_mark {
+	u32 value;
+	u32 mask;
+};
+
+/* Metadata label for masked write to conntrack label. */
+struct md_labels {
+	struct ovs_key_ct_labels value;
+	struct ovs_key_ct_labels mask;
+};
+
+enum ovs_ct_nat {
+	OVS_CT_NAT = 1 << 0,     /* NAT for committed connections only. */
+	OVS_CT_SRC_NAT = 1 << 1, /* Source NAT for NEW connections. */
+	OVS_CT_DST_NAT = 1 << 2, /* Destination NAT for NEW connections. */
+};
+
+/* Conntrack action context for execution. */
+struct ovs_conntrack_info {
+	struct nf_conntrack_helper *helper;
+	struct nf_conntrack_zone zone;
+	struct nf_conn *ct;
+	u8 commit : 1;
+	u8 nat : 3;                 /* enum ovs_ct_nat */
+	u16 family;
+	struct md_mark mark;
+	struct md_labels labels;
+#ifdef CONFIG_NF_NAT_NEEDED
+	struct nf_nat_range range;  /* Only present for SRC NAT and DST NAT. */
+#endif
+};
+
 struct ovs_conntrack_info;
 enum ovs_key_attr;
 
