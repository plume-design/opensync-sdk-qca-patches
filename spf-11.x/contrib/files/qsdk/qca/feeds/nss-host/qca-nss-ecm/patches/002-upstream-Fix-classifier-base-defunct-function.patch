
Subject: [PATCH] [qca-nss-ecm] Fix classifier base defunct function

Do not use the assigned classifier get first/next
APIs to walk through the connection list. Instead, use
the global connection list and compare if there is an
assigned classifier with the given type.
Having two different connection list and defuncting
the connections separately through these lists cause
race conditions in the ecm_db_connection_deref function,
since we have to release the lock to call the listener
callbacks before removing the connection from the assigned
classifiers' lists.

---
 ecm_db/ecm_db_connection.c | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/ecm_db/ecm_db_connection.c b/ecm_db/ecm_db_connection.c
index c1248ac..305678a 100644
--- a/ecm_db/ecm_db_connection.c
+++ b/ecm_db/ecm_db_connection.c
@@ -1,9 +1,12 @@
 /*
  **************************************************************************
  * Copyright (c) 2014-2020, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
+ *
  * Permission to use, copy, modify, and/or distribute this software for
  * any purpose with or without fee is hereby granted, provided that the
  * above copyright notice and this permission notice appear in all copies.
+ *
  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
@@ -1523,9 +1526,10 @@ void ecm_db_connection_defunct_by_classifier(int ip_ver, ip_addr_t src_addr_mask
 	/*
 	 * Iterate all connections
 	 */
-	ci = ecm_db_connection_by_classifier_type_assignment_get_and_ref_first(ca_type);
+	ci = ecm_db_connections_get_and_ref_first();
 	while (ci) {
 		struct ecm_db_connection_instance *cin;
+		struct ecm_classifier_instance *eci;
 		ip_addr_t sip;
 		ip_addr_t dip;
 		uint16_t sport, dport;
@@ -1533,6 +1537,12 @@ void ecm_db_connection_defunct_by_classifier(int ip_ver, ip_addr_t src_addr_mask
 
 		DEBUG_CHECK_MAGIC(ci, ECM_DB_CONNECTION_INSTANCE_MAGIC, "%px: magic failed", ci);
 
+		eci = ecm_db_connection_assigned_classifier_find_and_ref(ci, ca_type);
+		if (!eci) {
+			goto next_ci;
+		}
+		eci->deref(eci);
+
 		/*
 		 *  Ignore connection with wrong version
 		 */
@@ -1650,8 +1660,8 @@ defunct_conn:
 		ecm_db_connection_make_defunct(ci);
 
 next_ci:
-		cin = ecm_db_connection_by_classifier_type_assignment_get_and_ref_next(ci, ca_type);
-		ecm_db_connection_by_classifier_type_assignment_deref(ci, ca_type);
+		cin = ecm_db_connection_get_and_ref_next(ci);
+		ecm_db_connection_deref(ci);
 		ci = cin;
 	}
 
-- 
2.17.1

