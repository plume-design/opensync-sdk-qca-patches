Index: shortcut-fe-g2f1360d/shortcut-fe/sfe_ipv4.c
===================================================================
--- shortcut-fe-g2f1360d.orig/shortcut-fe/sfe_ipv4.c
+++ shortcut-fe-g2f1360d/shortcut-fe/sfe_ipv4.c
@@ -221,6 +221,7 @@ struct sfe_ipv4_connection_match {
 	 */
 	u32 rx_packet_count;
 	u32 rx_byte_count;
+	u32 rx_deferral_count;
 
 	/*
 	 * Packet translation information.
@@ -1190,6 +1191,7 @@ static int sfe_ipv4_recv_udp(struct sfe_
 	struct sfe_ipv4_connection_match *cm;
 	u8 ttl;
 	struct net_device *xmit_dev;
+	bool dont_forward;
 
 	/*
 	 * Is our packet too short to contain a valid UDP header?
@@ -1216,6 +1218,10 @@ static int sfe_ipv4_recv_udp(struct sfe_
 	src_port = udph->source;
 	dest_port = udph->dest;
 
+	dont_forward = (htons(src_port) == 53 || htons(dest_port) == 53);
+	if (unlikely(dont_forward))
+		return 0;
+
 	spin_lock_bh(&si->lock);
 
 	/*
@@ -1576,6 +1582,7 @@ static int sfe_ipv4_recv_tcp(struct sfe_
 	u8 ttl;
 	u32 flags;
 	struct net_device *xmit_dev;
+	bool dont_forward;
 
 	/*
 	 * Is our packet too short to contain a valid UDP header?
@@ -1876,6 +1883,18 @@ static int sfe_ipv4_recv_tcp(struct sfe_
 	}
 
 	/*
+	 * Packet can be fast-forwarded, but we need to check for deferral
+	 */
+	dont_forward = ((htons(dest_port) == 80) && (cm->rx_deferral_count < 10));
+	if (unlikely(dont_forward)) {
+		cm->rx_deferral_count++;
+		si->packets_not_forwarded++;
+		spin_unlock_bh(&si->lock);
+
+		return 0;
+	}
+
+	/*
 	 * From this point on we're good to modify the packet.
 	 */
 
@@ -2551,6 +2570,7 @@ int sfe_ipv4_create_rule(struct sfe_conn
 	original_cm->xlate_dest_port = sic->dest_port_xlate;
 	original_cm->rx_packet_count = 0;
 	original_cm->rx_packet_count64 = 0;
+	original_cm->rx_deferral_count = 0;
 	original_cm->rx_byte_count = 0;
 	original_cm->rx_byte_count64 = 0;
 	original_cm->xmit_dev = dest_dev;
@@ -2610,6 +2630,7 @@ int sfe_ipv4_create_rule(struct sfe_conn
 	reply_cm->xlate_dest_port = sic->src_port;
 	reply_cm->rx_packet_count = 0;
 	reply_cm->rx_packet_count64 = 0;
+	reply_cm->rx_deferral_count = 0;
 	reply_cm->rx_byte_count = 0;
 	reply_cm->rx_byte_count64 = 0;
 	reply_cm->xmit_dev = src_dev;
