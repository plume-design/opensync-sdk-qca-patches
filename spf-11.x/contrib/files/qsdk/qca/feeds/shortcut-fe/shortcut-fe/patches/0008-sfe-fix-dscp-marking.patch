--- a/shortcut-fe/sfe_ipv4.c
+++ b/shortcut-fe/sfe_ipv4.c
@@ -1355,13 +1355,6 @@ static int sfe_ipv4_recv_udp(struct sfe_
 	}
 
 	/*
-	 * Update DSCP
-	 */
-	if (unlikely(cm->flags & SFE_IPV4_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
-		iph->tos = (iph->tos & SFE_IPV4_DSCP_MASK) | cm->dscp;
-	}
-
-	/*
 	 * Decrement our TTL.
 	 */
 	iph->ttl = ttl - 1;
@@ -1423,11 +1416,6 @@ static int sfe_ipv4_recv_udp(struct sfe_
 	}
 
 	/*
-	 * Replace the IP checksum.
-	 */
-	iph->check = sfe_ipv4_gen_ip_csum(iph);
-
-	/*
 	 * Update traffic stats.
 	 */
 	cm->rx_packet_count++;
@@ -1488,6 +1476,18 @@ static int sfe_ipv4_recv_udp(struct sfe_
 		DEBUG_TRACE("SKB MARK is NON ZERO %x\n", skb->mark);
 	}
 
+	/*
+	 * Update DSCP
+	 */
+	if (unlikely(cm->flags & SFE_IPV4_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
+		iph->tos = (iph->tos & SFE_IPV4_DSCP_MASK) | (cm->dscp << SFE_IPV4_DSCP_SHIFT);
+	}
+
+	/*
+	 * Replace the IP checksum.
+	 */
+	iph->check = sfe_ipv4_gen_ip_csum(iph);
+
 	si->packets_forwarded++;
 	spin_unlock_bh(&si->lock);
 
@@ -1946,13 +1946,6 @@ static int sfe_ipv4_recv_tcp(struct sfe_
 	}
 
 	/*
-	 * Update DSCP
-	 */
-	if (unlikely(cm->flags & SFE_IPV4_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
-		iph->tos = (iph->tos & SFE_IPV4_DSCP_MASK) | cm->dscp;
-	}
-
-	/*
 	 * Decrement our TTL.
 	 */
 	iph->ttl = ttl - 1;
@@ -2008,11 +2001,6 @@ static int sfe_ipv4_recv_tcp(struct sfe_
 	}
 
 	/*
-	 * Replace the IP checksum.
-	 */
-	iph->check = sfe_ipv4_gen_ip_csum(iph);
-
-	/*
 	 * Update traffic stats.
 	 */
 	cm->rx_packet_count++;
@@ -2073,6 +2061,18 @@ static int sfe_ipv4_recv_tcp(struct sfe_
 		DEBUG_TRACE("SKB MARK is NON ZERO %x\n", skb->mark);
 	}
 
+	/*
+	 * Update DSCP
+	 */
+	if (unlikely(cm->flags & SFE_IPV4_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
+		iph->tos = (iph->tos & SFE_IPV4_DSCP_MASK) | (cm->dscp << SFE_IPV4_DSCP_SHIFT);
+	}
+
+	/*
+	 * Replace the IP checksum.
+	 */
+	iph->check = sfe_ipv4_gen_ip_csum(iph);
+
 	si->packets_forwarded++;
 	spin_unlock_bh(&si->lock);
 
@@ -2657,7 +2657,7 @@ int sfe_ipv4_create_rule(struct sfe_conn
 		original_cm->flags |= SFE_IPV4_CONNECTION_MATCH_FLAG_PRIORITY_REMARK;
 	}
 	if (sic->flags & SFE_CREATE_FLAG_REMARK_DSCP) {
-		original_cm->dscp = sic->src_dscp << SFE_IPV4_DSCP_SHIFT;
+		original_cm->dscp = sic->src_dscp & ~SFE_IPV4_DSCP_MASK;
 		original_cm->flags |= SFE_IPV4_CONNECTION_MATCH_FLAG_DSCP_REMARK;
 	}
 #ifdef CONFIG_NF_FLOW_COOKIE
@@ -2733,7 +2733,7 @@ int sfe_ipv4_create_rule(struct sfe_conn
 		reply_cm->flags |= SFE_IPV4_CONNECTION_MATCH_FLAG_PRIORITY_REMARK;
 	}
 	if (sic->flags & SFE_CREATE_FLAG_REMARK_DSCP) {
-		reply_cm->dscp = sic->dest_dscp << SFE_IPV4_DSCP_SHIFT;
+		reply_cm->dscp = sic->dest_dscp & ~SFE_IPV4_DSCP_MASK;
 		reply_cm->flags |= SFE_IPV4_CONNECTION_MATCH_FLAG_DSCP_REMARK;
 	}
 #ifdef CONFIG_NF_FLOW_COOKIE
@@ -3292,7 +3292,7 @@ static bool sfe_ipv4_debug_dev_read_conn
 	src_port = c->src_port;
 	src_port_xlate = c->src_port_xlate;
 	src_priority = original_cm->priority;
-	src_dscp = original_cm->dscp >> SFE_IPV4_DSCP_SHIFT;
+	src_dscp = original_cm->dscp;
 
 	sfe_ipv4_connection_match_update_summary_stats(original_cm);
 	sfe_ipv4_connection_match_update_summary_stats(reply_cm);
@@ -3305,7 +3305,7 @@ static bool sfe_ipv4_debug_dev_read_conn
 	dest_port = c->dest_port;
 	dest_port_xlate = c->dest_port_xlate;
 	dest_priority = reply_cm->priority;
-	dest_dscp = reply_cm->dscp >> SFE_IPV4_DSCP_SHIFT;
+	dest_dscp = reply_cm->dscp;
 	dest_rx_packets = reply_cm->rx_packet_count64;
 	dest_rx_bytes = reply_cm->rx_byte_count64;
 	last_sync_jiffies = get_jiffies_64() - c->last_sync_jiffies;
--- a/shortcut-fe/sfe_ipv6.c
+++ b/shortcut-fe/sfe_ipv6.c
@@ -1404,13 +1404,6 @@ static int sfe_ipv6_recv_udp(struct sfe_
 	}
 
 	/*
-	 * Update DSCP
-	 */
-	if (unlikely(cm->flags & SFE_IPV6_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
-		sfe_ipv6_change_dsfield(iph, cm->dscp);
-	}
-
-	/*
 	 * Decrement our hop_limit.
 	 */
 	iph->hop_limit -= 1;
@@ -1518,6 +1511,13 @@ static int sfe_ipv6_recv_udp(struct sfe_
 		DEBUG_TRACE("SKB MARK is NON ZERO %x\n", skb->mark);
 	}
 
+	/*
+	 * Update DSCP
+	 */
+	if (unlikely(cm->flags & SFE_IPV6_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
+		sfe_ipv6_change_dsfield(iph, cm->dscp);
+	}
+
 	si->packets_forwarded++;
 	spin_unlock_bh(&si->lock);
 
@@ -1962,13 +1962,6 @@ static int sfe_ipv6_recv_tcp(struct sfe_
 	}
 
 	/*
-	 * Update DSCP
-	 */
-	if (unlikely(cm->flags & SFE_IPV6_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
-		sfe_ipv6_change_dsfield(iph, cm->dscp);
-	}
-
-	/*
 	 * Decrement our hop_limit.
 	 */
 	iph->hop_limit -= 1;
@@ -2074,6 +2067,13 @@ static int sfe_ipv6_recv_tcp(struct sfe_
 		DEBUG_TRACE("SKB MARK is NON ZERO %x\n", skb->mark);
 	}
 
+	/*
+	 * Update DSCP
+	 */
+	if (unlikely(cm->flags & SFE_IPV6_CONNECTION_MATCH_FLAG_DSCP_REMARK)) {
+		sfe_ipv6_change_dsfield(iph, cm->dscp);
+	}
+
 	si->packets_forwarded++;
 	spin_unlock_bh(&si->lock);
 
